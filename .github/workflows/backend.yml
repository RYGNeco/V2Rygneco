name: Backend Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  build-deploy-backend:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Node.js (optional if tests required)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      # Install dependencies & run tests
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run tests
        working-directory: ./backend
        run: npm test --if-present

      # Build & push Docker image
      - name: Build Docker image
        run: docker build -t $ECR_REPO:latest ./backend
        env:
          ECR_REPO: ${{ secrets.AWS_ECR_REPO }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: us-east-1

      - name: Push Docker image
        run: |
          docker tag $ECR_REPO:latest ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:latest
        env:
          ECR_REPO: ${{ secrets.AWS_ECR_REPO }}

      # Trigger CodePipeline (for ECS deploy)
      - name: Trigger AWS CodePipeline
        run: aws codepipeline start-pipeline-execution --name ${{ secrets.AWS_CODEPIPELINE_BACKEND }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
